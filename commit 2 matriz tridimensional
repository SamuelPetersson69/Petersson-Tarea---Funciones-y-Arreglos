#include <stdio.h>

// esta wea inicia la matris en 3 dimenciones
void inicializarArreglo(int arr[][10][10], int dim1, int dim2, int dim3) {
    // esto hace que todas las matrices sean 0 a exepcion de la ultima aqui necesite ayuda
    for (int i = 0; i < dim1 - 1; i++) {
        for (int j = 0; j < dim2; j++) {
            for (int k = 0; k < dim3; k++) {
                arr[i][j][k] = 0; // pociciona los 0 en casi todas las capas a exepcion de la ultima
            }
        }
    }
    // este llena de 1 la ultima matriz
    for (int j = 0; j < dim2; j++) {
        for (int k = 0; k < dim3; k++) {
            arr[dim1 - 1][j][k] = 1; // este mete los 1 en las filas columnas etc similas al anterior de 0 pero al reves
        }
    }
}

// esta funcion sacada de internet porque no no doy imprime las funciones
void imprimirArreglo(int arr[][10][10], int dim1, int dim2, int dim3) {
    printf("Elementos del arreglo tridimensional:\n");
    for (int i = 0; i < dim1; i++) {
        printf("Capa %d:\n", i + 1); // Imprime el número de capa actual
        for (int j = 0; j < dim2; j++) {
            for (int k = 0; k < dim3; k++) {
                printf("%d ", arr[i][j][k]); // este imprime cada elemento en la capa
            }
            printf("\n"); // esto separa filas.
        }
        printf("\n"); // este print separa capas
    }
}

int main() {
    int dim1, dim2, dim3;

    // de toda las vida pedir y guardar el resultado con sus restriccones
    printf("Ingrese el número de capas para cada dimensión del arreglo tridimensional:\n");
    printf("Capas para Dimensión 1: ");
    scanf("%d", &dim1);
    printf("Capas para Dimensión 2: ");
    scanf("%d", &dim2);
    printf("Capas para Dimensión 3: ");
    scanf("%d", &dim3);

    // esto verifica que las dimencines no sean mayores a 10 porque ese limite como ya mencione yo lo designe para que no imprima mal
    if (dim1 > 10 || dim2 > 10 || dim3 > 10) {
        printf("El número de capas no puede ser mayor que 10.\n");
        return 1;
    }

    int arreglo[dim1][10][10]; //esto crea la matris con sus dimenciones

    inicializarArreglo(arreglo, dim1, dim2, dim3); // esto inicia la matriz
    imprimirArreglo(arreglo, dim1, dim2, dim3); //  y esta la imprime

    return 0;
}
